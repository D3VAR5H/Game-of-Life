{"version":3,"sources":["components/Box.js","components/Grid.js","components/Toolbar.js","components/Links.js","components/GameOfLife.js","index.js"],"names":["Box","selectBox","props","row","col","className","this","selected","gridClass","onClick","PureComponent","Grid","grid","style","display","position","left","transform","gridTemplateColumns","length","map","rows","i","cols","j","key","Toolbar","playPauseClickHandler","playPause","state","isPlaying","setState","toggleGrid","clear","seed","Links","href","Main","gridCopy","JSON","parse","stringify","isGridActive","Math","floor","random","playPauseButton","pauseButton","playButton","clearInterval","intervalId","setInterval","play","speed","numRow","numCol","count","generation","save","console","log","Array","fill","Component","ReactDOM","render","GameOfLife","document","getElementById"],"mappings":"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","file":"static/js/main.f97ed5f4.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\n\nclass Box extends PureComponent {\n\tselectBox = () => {\n\t\tthis.props.selectBox(this.props.row, this.props.col);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={\n\t\t\t\t\tthis.props.selected\n\t\t\t\t\t\t? `box ${this.props.gridClass} on`\n\t\t\t\t\t\t: `box ${this.props.gridClass} off`\n\t\t\t\t}\n\t\t\t\tonClick={this.selectBox}\n\t\t\t></div>\n\t\t);\n\t}\n}\n\nexport default Box;\n","import React from \"react\";\n\nimport Box from \"./Box\";\n\nfunction Grid(props) {\n\tconst { grid, selectBox, gridClass } = props;\n\treturn (\n\t\t<div\n\t\t\tclassName=\"grid\"\n\t\t\tstyle={{\n\t\t\t\tdisplay: `grid`,\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tleft: \"50%\",\n\t\t\t\ttransform: \"translateX(-50%)\",\n\t\t\t\tgridTemplateColumns: `repeat(${grid[0].length},15px)`,\n\t\t\t}}\n\t\t>\n\t\t\t{grid.map((rows, i) =>\n\t\t\t\trows.map((cols, j) => (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tkey={`${i}-${j}`}\n\t\t\t\t\t\tselected={grid[i][j]}\n\t\t\t\t\t\trow={i}\n\t\t\t\t\t\tcol={j}\n\t\t\t\t\t\tselectBox={selectBox}\n\t\t\t\t\t\tgridClass={gridClass}\n\t\t\t\t\t/>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Grid;\n","import React, { PureComponent } from \"react\";\n\nclass Toolbar extends PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisPlaying: false,\n\t\t};\n\t}\n\n\tplayPauseClickHandler = () => {\n\t\tthis.props.playPause(this.state.isPlaying);\n\t\tthis.setState({\n\t\t\tisPlaying: !this.state.isPlaying,\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"controls\">\n\t\t\t\t<h1>Game of Life</h1>\n\t\t\t\t<button onClick={this.props.toggleGrid}>Toggle Grid</button>\n\t\t\t\t<button onClick={this.playPauseClickHandler}>\n\t\t\t\t\t{this.state.isPlaying ? \"Pause\" : \"Play\"}\n\t\t\t\t</button>\n\t\t\t\t<button onClick={this.props.clear}>Clear</button>\n\t\t\t\t<button onClick={this.props.seed}>Seed</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Toolbar;\n","import React from \"react\";\n\nexport default function Links() {\n\treturn (\n\t\t<div className=\"links\">\n\t\t\t<a href=\"https://github.com/D3VAR5H/Game-of-Life\">\n\t\t\t\t<i></i>GitHub Repo\n\t\t\t</a>\n\t\t</div>\n\t);\n}\n","import React, { Component } from \"react\";\n\nimport Grid from \"./Grid\";\nimport Toolbar from \"./Toolbar\";\nimport Links from \"./Links\";\n\nclass Main extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.speed = 20;\n\t\tthis.rows = 30;\n\t\tthis.cols = 50;\n\t\tthis.isGridActive = false;\n\n\t\tthis.state = {\n\t\t\tgeneration: 0,\n\t\t\tgridClass: \"\",\n\t\t\tgrid: Array(this.rows)\n\t\t\t\t.fill()\n\t\t\t\t.map(() => Array(this.cols).fill(false)),\n\t\t};\n\t}\n\n\tselectBox = (row, col) => {\n\t\tlet gridCopy = JSON.parse(JSON.stringify(this.state.grid));\n\t\tgridCopy[row][col] = !gridCopy[row][col];\n\n\t\tthis.setState({\n\t\t\tgrid: gridCopy,\n\t\t});\n\t};\n\n\ttoggleGrid = () => {\n\t\tconst gridClass = this.isGridActive ? \"\" : \"grid-active\";\n\t\tthis.isGridActive = !this.isGridActive;\n\t\tthis.setState({\n\t\t\tgridClass: gridClass,\n\t\t});\n\t};\n\n\tclear = () => {\n\t\tlet gridCopy = JSON.parse(JSON.stringify(this.state.grid));\n\t\tgridCopy.map((rows, i) =>\n\t\t\trows.map((cols, j) => (gridCopy[i][j] = false))\n\t\t);\n\n\t\tthis.setState({\n\t\t\tgrid: gridCopy,\n\t\t});\n\t};\n\n\tseed = () => {\n\t\tlet gridCopy = JSON.parse(JSON.stringify(this.state.grid));\n\t\tgridCopy.map((rows, i) =>\n\t\t\trows.map((cols, j) =>\n\t\t\t\tMath.floor(Math.random() * 4) === 1\n\t\t\t\t\t? (gridCopy[i][j] = true)\n\t\t\t\t\t: (gridCopy[i][j] = false)\n\t\t\t)\n\t\t);\n\n\t\tthis.setState({\n\t\t\tgrid: gridCopy,\n\t\t});\n\t};\n\n\tplayPauseButton = (isPlaying) => {\n\t\tisPlaying ? this.pauseButton() : this.playButton();\n\t};\n\n\tplayButton = () => {\n\t\tclearInterval(this.intervalId);\n\t\tthis.intervalId = setInterval(this.play, this.speed);\n\t};\n\n\tpauseButton = () => {\n\t\tclearInterval(this.intervalId);\n\t};\n\n\tplay = () => {\n\t\tconst grid = this.state.grid,\n\t\t\tnumRow = grid.length,\n\t\t\tnumCol = grid[0].length;\n\t\tlet gridCopy = JSON.parse(JSON.stringify(this.state.grid));\n\t\tfor (let i = 0; i < numRow; i++) {\n\t\t\tfor (let j = 0; j < numCol; j++) {\n\t\t\t\tlet count = 0;\n\t\t\t\tif (i > 0) if (grid[i - 1][j]) count++;\n\t\t\t\tif (i > 0 && j > 0) if (grid[i - 1][j - 1]) count++;\n\t\t\t\tif (i > 0 && j < numCol - 1) if (grid[i - 1][j + 1]) count++;\n\t\t\t\tif (j < numCol - 1) if (grid[i][j + 1]) count++;\n\t\t\t\tif (j > 0) if (grid[i][j - 1]) count++;\n\t\t\t\tif (i < numRow - 1) if (grid[i + 1][j]) count++;\n\t\t\t\tif (i < numRow - 1 && j > 0) if (grid[i + 1][j - 1]) count++;\n\t\t\t\tif (i < numRow - 1 && j < numCol - 1)\n\t\t\t\t\tif (grid[i + 1][j + 1]) count++;\n\t\t\t\tif (grid[i][j] && (count < 2 || count > 3))\n\t\t\t\t\tgridCopy[i][j] = false;\n\t\t\t\tif (!grid[i][j] && count === 3) gridCopy[i][j] = true;\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tgrid: gridCopy,\n\t\t\tgeneration: this.state.generation + 1,\n\t\t});\n\t};\n\n\tsave = () => {\n\t\tconsole.log(this.state.grid);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Toolbar\n\t\t\t\t\ttoggleGrid={this.toggleGrid}\n\t\t\t\t\tplayPause={this.playPauseButton}\n\t\t\t\t\tclear={this.clear}\n\t\t\t\t\tseed={this.seed}\n\t\t\t\t/>\n\t\t\t\t<Grid\n\t\t\t\t\tgrid={this.state.grid}\n\t\t\t\t\tgridClass={this.state.gridClass}\n\t\t\t\t\tselectBox={this.selectBox}\n\t\t\t\t/>\n\t\t\t\t{/* <h2>Generations:{this.state.generation}</h2> */}\n\t\t\t\t<Links />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Main;\n","import React, { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nimport GameOfLife from \"./components/GameOfLife\";\n\nReactDOM.render(\n\t<StrictMode>\n\t\t<GameOfLife />\n\t</StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}